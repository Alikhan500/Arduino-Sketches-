
***WORK IN PROGRESS ***
***MAKING A MODULAR SYSTEM FOR D.I.Y. GREENHOUSE
**i WILL improve it as i learn more :)


/* Arduino Nano Thermostat v1.0 using a thermistor and an oled display
***made by Alikhan from Pakistan :) 
***by using parts of sketches made by "youtube user Kelton bailey" and "Adafruit tutorial for using a thermistor" (links below)
**nano+oled+dht tutorial :        https://www.youtube.com/watch?v=bZKlVzwHiGY
**adafruit thermistor tutorial :  https://learn.adafruit.com/thermistor/using-a-thermistor
  
 **PARTS required (for this sketch to work as it is ) 
  
  1.Arduino Nano or Clone
  
  2.A thermistor (i used one salvaged from a dell laptop battery :) and after changing some values in the "thermistor settings part "
                  i made it work somehow and it's close to the analog thermometer i used to compare the values) 
  
  3.A resistor (matching the value of the thermistor's "nominal resistance at 25" for example: 5k resistor for 5k thermistor)
  
  4.OLED display ssd1306  (mine is ssd1306 but got it working by using sh1106 constructor also got rid of the "white line problem") 
  
  5. two LEDS (with appropriate resistors)as OUTPUTS for HEATER and COOLER (to see turning ON or OFF)
  
  6.breadboard and jumper wires 
  
  7. wiring shown in the tutorials 
  
  
  //TEMPERATURE "CONTROL PARAMETERS"                                          always wanted to say it too :)


#define Tmax 25            // Set temperature maximum point at which Cooler pin will turn ON
#define setT 20            // Set temperature  point at which heater and cooler will turn OFF
#define Tmin 15            //  Set temperature minimum  point at which Heater pin will turn on 
 
int cooler = 12;           // Set Led or Relay Pin change it to whatever digital pin is connected to Led or relay
int heater = 3 ;


  //THERMISTOR SETTINGS


#define THERMISTORPIN A0          // which analog pin to connect to thermistor and the resistor "joint"       

#define THERMISTORNOMINAL 9000    // resistance at 25 degrees C     

#define TEMPERATURENOMINAL 25     // temp. for nominal resistance (almost always 25 C)
                                
#define NUMSAMPLES 5    // how many samples to take and average,takes longer gets 'smooth'

#define BCOEFFICIENT 3000  // The beta coefficient of the thermistor (usually 3000-4000)

#define SERIESRESISTOR 9700 // the value of the 'other' resistor  should be close to equal to the thermistors nominal value 


int samples[NUMSAMPLES];
       
       
      
      
       // OLED PARAMETERS

#include "U8glib.h"

U8GLIB_SH1106_128X64 u8g(13, 11, 10, 9); // SW SPI Com: SCK = 13, MOSI = 11, CS = 10, A0 = 9 // OLED "constructor" and pins info. 

char str[10]; // i don't know what this line is for...yet :)

      
      
      //START SCREEN "BLOCK"
void drawTest(void)
{
  u8g.setFont(u8g_font_unifont); // "draw test" it will be ran from setup below
                                 //  and it will be the "START SCREEN" on oled
  u8g.drawFrame(10,12,108,31);  
  u8g.drawFrame(0,0,128,64);  
  u8g.drawStr(15,25, "Temperature");
  u8g.drawStr( 16,40, "Controller");
  u8g.drawStr(30,56, "Made by:AMK");
}


void setup(void) {
  Serial.begin(9600);       // for serial monitor only
  analogReference(EXTERNAL);   // AREF connected to 3.3 ON BOARD for accuracy of thermistor (adafruit using a thermistor tutorial )
 
  Serial.println("AMK Temperature Controller!"); //ONLY ONCE AT START UP in seial monitor only
  
  
  
  u8g.firstPage();                    // run the "draw test" block (above) ON THE OLED
  do {
    drawTest();
  } while( u8g.nextPage() );
}
 
void loop(void) {
  uint8_t i;         // THERMISTOR CALCULATIONS
  float average;
 
  // take N samples in a row, with a slight delay
  for (i=0; i< NUMSAMPLES; i++) {
   samples[i] = analogRead(THERMISTORPIN);
   delay(10);
  }
 
  // average all the samples out
  average = 0;
  for (i=0; i< NUMSAMPLES; i++) {
     average += samples[i];
  }
  average /= NUMSAMPLES;
 
 
  // convert the value to resistance
  average = 1023 / average - 1;
  average = SERIESRESISTOR / average;
  Serial.print("Thermistor resistance "); 
  Serial.println(average);
 
  float steinhart;
  steinhart = average / THERMISTORNOMINAL;     // (R/Ro)
  steinhart = log(steinhart);                  // ln(R/Ro)
  steinhart /= BCOEFFICIENT;                   // 1/B * ln(R/Ro)
  steinhart += 1.0 / (TEMPERATURENOMINAL + 273.15); // + (1/To)
  steinhart = 1.0 / steinhart;                 // Invert
  steinhart -= 273.15;                         // convert to C     
 
  Serial.print("Temperature ");               // FOR SERIAL MONITOR
  Serial.print(steinhart);
  Serial.println(" *C");
  
  // "steinhart" is the final temperature in celcius i used it as it is below
  
  
  
  
  // CONTROL PART (THE GOOD STUFF) "ifs"
  
  if (steinhart >= Tmax)                        //  TURN COOLER ON IF TEMPERATURE IS EQUAL TO OR EXCEEDS "Tmax" (HEATER remains OFF)
  {
   digitalWrite(cooler, HIGH);
   digitalWrite(heater,LOW);
   Serial.print("TEMPERATURE HIGH"); // PRINT HIGH IN SERIAL MONITOR
  }
 
  
  if (steinhart <= setT && steinhart > Tmin)// TURN OFF THE COOLER WHEN TEMP GETS DOWN TO "setT" OR GOES BELOW
  { digitalWrite(cooler, LOW);
   Serial.print("Temperature  NORMAL"); // PRINT NORMAL IN SERIAL MONITOR
  }
 
  
  if (steinhart <= Tmin)    // TURN HEATER ON WHEN TEMPERATURE GETS TO "Tmin" OR BELOW (cooler remain OFF)
  {
    digitalWrite(heater,HIGH);
    digitalWrite (cooler,LOW); 
  Serial.print("Temperature  LOW"); //PRINT LOW
  }
 
 
 if (steinhart >=setT && steinhart <Tmax)    // TURN OFF HEATER WHEN TEMP GETS TO "setT" (and REMAINS LOWER THAN "Tmax")
  {digitalWrite (heater,LOW);
  }                                                       
  
  // OLED PART


  
  u8g.firstPage();                          // PICTURE LOOP FOR OLED    it's is a doer :) 
  do {
    u8g.setFont(u8g_font_helvB08);    // set font for oled display
    
   
    
    
    u8g.drawStr( 0, 33, "Temperature:");    // first digit is screen coordinate for X-axis and second for Y-axis 
                                            // (it starts on left bottom corner of the text which is to be shown on the oled)
    u8g.drawStr( 75, 34, dtostrf(steinhart, 5, 2, str)); //stienhart is the final celsius reading also shown in serial monitor 
    u8g.drawStr( 115, 34, "\260C");

    u8g.drawStr( 0, 44, "Set Tmax:");
    u8g.drawStr( 75, 44, dtostrf(Tmax, 5, 2, str));
    u8g.drawStr( 115, 44, "\260C");

    u8g.drawStr( 0, 54, "Set Tnor :");
    u8g.drawStr( 75, 54, dtostrf(setT, 5, 2, str));
    u8g.drawStr( 115, 54, "\260C");

    u8g.drawStr( 0, 64, "Set Tmin:");
    u8g.drawStr( 75, 64, dtostrf(Tmin, 5, 2, str));
    u8g.drawStr( 115, 64, "\260C");
    
    delay(1000);
    } while( u8g.nextPage() );
      }
